{"version":3,"sources":["../../app-es6/controllers/ActivityController.js"],"names":["activityControllerInstance","activityController","Bind","DateHelper","MultiBind","Activity","Message","User","UserService","ActivitiesView","ActivitiesDashboardView","MessageView","NavigationBarView","BadgesView","CollectiblesView","ActivityController","$","document","querySelector","bind","_date","_activity","_place","_route_distance","_time","_user","window","sessionStorage","login","_message","_service","import","event","preventDefault","activity","_createActivity","addActivity","then","console","log","res","text","catch","error","_cleanForm","getUserActivities","activities","forEach","getUserBadges","badges","addBadge","badge","textToDate","value","parseFloat","Date"],"mappings":"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","file":"ActivityController.js","sourcesContent":["import {Bind} from '../helpers/Bind';\r\nimport { DateHelper } from '../helpers/DateHelper';\r\nimport {MultiBind} from '../helpers/MultiBind';\r\n\r\nimport {Activity} from '../models/Activity';\r\nimport {Message} from '../models/Message';\r\nimport {User} from '../models/User';\r\n\r\nimport {UserService} from '../services/UserService';\r\n\r\nimport {ActivitiesView} from '../views/ActivitiesView';\r\nimport {ActivitiesDashboardView} from '../views/ActivitiesDashboardView';\r\nimport {MessageView} from '../views/MessageView';\r\nimport { NavigationBarView } from '../views/NavigationBarView';\r\nimport { BadgesView } from '../views/BadgesView';\r\nimport { CollectiblesView } from '../views/CollectiblesView';\r\n\r\nclass ActivityController {\r\n\r\n    constructor(){\r\n        let $ = document.querySelector.bind(document);\r\n    \r\n        this._date = $(\"#date\");\r\n        this._activity = $(\"#activity\");\r\n        this._place = $(\"#place\");\r\n        this._route_distance = $(\"#route_distance\");\r\n        this._time = $(\"#time\");\r\n\r\n        //this._user = new Bind(new ListActivities(), new ActivitiesView($(\"#activities-data\")), 'add');\r\n        this._user = new MultiBind(new User(window.sessionStorage.login), [\r\n            new ActivitiesView($(\"#activities-data\")), \r\n            new ActivitiesDashboardView($(\"#management-dashboard\")),\r\n            new BadgesView($(\"#badges\")),\r\n            new CollectiblesView($(\"#collectibles\")),\r\n            new NavigationBarView($(\".user-pill\"))\r\n        ], 'addActivity', 'addBadge');\r\n        this._message = new Bind(new Message(), new MessageView($(\"#messaging\")), 'text');\r\n\r\n        /**\r\n         * this._collectiblesList = new Bind(new CollectiblesList(), new CollectiblesView(), 'addCollectible'); // creates a new instance of model-view -> CollectiblesList\r\n         * \r\n         * buyCollectible(){ open modal, option to confirm checkout, purchase order }\r\n         */\r\n\r\n        this._service = new UserService();\r\n\r\n        this.import();\r\n\r\n    }\r\n\r\n    add(event){\r\n        event.preventDefault();\r\n\r\n        const activity = this._createActivity();\r\n\r\n        this._service\r\n            .addActivity(activity)\r\n            .then(res => {\r\n                console.log(res);\r\n                this._message.text = \"Activity created\";\r\n            })\r\n            .catch(error => this._message.text = error);\r\n\r\n        this._user.addActivity(activity);\r\n\r\n        this._cleanForm();\r\n    }\r\n\r\n    import() {\r\n        this._service\r\n            .getUserActivities()\r\n            .then(activities => {\r\n                activities.forEach(activity => this._user.addActivity(activity));\r\n            })\r\n            .catch(error => this._message.text = error);\r\n\r\n        this._service\r\n            .getUserBadges()\r\n            .then(badges => {\r\n                return badges;\r\n            })\r\n            .then(badges => {\r\n                badges.forEach(badge => this._user.addBadge(badge));\r\n            })\r\n            .catch(error => this._message.text = error);\r\n    }\r\n\r\n    _createActivity(){\r\n        return new Activity(\r\n            DateHelper.textToDate(this._date.value),\r\n            this._activity.value,\r\n            this._place.value,\r\n            parseFloat(this._route_distance.value),\r\n            this._time.value\r\n        );\r\n    }\r\n\r\n    _cleanForm(){\r\n        this._date = new Date();\r\n        this._activity = \"Walking\";\r\n        this._place = \"\";\r\n        this._route_distance = 0.00;\r\n        this._time = \"00:00:00\";\r\n        //this._date.focus();\r\n    }\r\n}\r\n\r\nlet activityController = new ActivityController();\r\n\r\nexport function activityControllerInstance(){\r\n    return activityController;\r\n}"]}