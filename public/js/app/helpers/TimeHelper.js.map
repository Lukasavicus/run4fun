{"version":3,"sources":["../../app-es6/helpers/TimeHelper.js"],"names":["TimeHelper","Error","timeString","hours","parseInt","split","minutes","seconds","getNumberSeconds","h","m","s","secs","mins","hrs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAAaA,U;AACT,sCAAa;AAAA;;AACT,0BAAM,IAAIC,KAAJ,CAAU,uCAAV,CAAN;AACH;;;;qDAEuBC,U,EAAW;AAC/B,4BAAMC,QAAQC,SAASF,WAAWG,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAT,CAAd,CAD+B,CACmB;AAClD,4BAAMC,UAAUF,SAASF,WAAWG,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAT,CAAhB;AACA,4BAAME,UAAUH,SAASF,WAAWG,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAT,CAAhB;;AAEA,+BAASF,QAAQ,IAAT,GAAkBG,UAAU,EAA5B,GAAmCC,UAAU,CAArD;AACH;;;mDAEqBL,U,EAAW;AAC7B,+BAAQF,WAAWQ,gBAAX,CAA4BN,UAA5B,IAA0C,IAAlD;AACH;;;iDAE+B;AAAA,4BAAdO,CAAc,uEAAZ,CAAY;AAAA,4BAATC,CAAS,uEAAP,CAAO;AAAA,4BAAJC,CAAI,uEAAF,CAAE;;;AAE5B,4BAAIR,QAAQM,CAAZ;AACA,4BAAIH,UAAUI,CAAd;AACA,4BAAIH,UAAUI,CAAd;;AAEA,4BAAIC,OAAO,IAAX;AACA,4BAAIC,OAAO,IAAX;AACA,4BAAIC,MAAO,IAAX;;AAEA;;AAEA,4BAAGP,WAAW,EAAd,EAAiB;AACbO,kCAAMV,SAASG,UAAU,IAAnB,CAAN;AACAA,uCAAW,IAAX;AACAM,mCAAOT,SAASG,UAAU,EAAnB,CAAP;AACAA,uCAAW,EAAX;AACAK,mCAAOR,SAASG,UAAU,EAAnB,CAAP;AACH,yBAND,MAOI;AACAK,mCAAOL,OAAP;AACH;;AAED,4BAAGD,WAAW,EAAd,EAAiB;AACbQ,kCAAMV,SAASE,UAAU,EAAnB,CAAN;AACAA,uCAAW,EAAX;AACAO,mCAAOT,SAASE,UAAU,EAAnB,CAAP;AACH,yBAJD,MAKK,IAAGK,IAAI,EAAP,EAAU;AACXE,mCAAOP,OAAP;AACH;;AAED,4BAAGK,IAAI,EAAJ,IAAUD,IAAI,EAAjB,EAAoB;AAChBI,kCAAMX,KAAN;AACH;;AAED;;AAEAS,+BAAO,CAAEA,OAAO,EAAR,GAAc,GAAd,GAAoB,EAArB,IAA2BA,IAAlC;AACAC,+BAAO,CAAEA,OAAO,EAAR,GAAc,GAAd,GAAoB,EAArB,IAA2BA,IAAlC;AACAC,8BAAM,CAAEA,MAAM,EAAP,GAAa,GAAb,GAAmB,EAApB,IAA0BA,GAAhC;;AAEA,+BAAUA,GAAV,SAAiBD,IAAjB,SAAyBD,IAAzB;AACH","file":"TimeHelper.js","sourcesContent":["export class TimeHelper{\r\n    constructor(){\r\n        throw new Error(\"This class should not be instantiated\");\r\n    }\r\n\r\n    static getNumberSeconds(timeString){\r\n        const hours = parseInt(timeString.split(':')[0]); // TODO: improve it\r\n        const minutes = parseInt(timeString.split(':')[1]);\r\n        const seconds = parseInt(timeString.split(':')[2]);\r\n\r\n        return ((hours * 3600) + (minutes * 60) + (seconds * 1));\r\n    }\r\n\r\n    static getNumberHours(timeString){\r\n        return (TimeHelper.getNumberSeconds(timeString) / 3600);\r\n    }\r\n\r\n    static timeToText(h=0, m=0, s=0){\r\n\r\n        let hours = h;\r\n        let minutes = m;\r\n        let seconds = s;\r\n\r\n        let secs = \"00\";\r\n        let mins = \"00\";\r\n        let hrs  = \"00\";\r\n\r\n        //console.log(hours, minutes, seconds, h, m, s);\r\n\r\n        if(seconds >= 60){\r\n            hrs = parseInt(seconds / 3600);\r\n            seconds %= 3600;\r\n            mins = parseInt(seconds / 60);\r\n            seconds %= 60;\r\n            secs = parseInt(seconds % 60);\r\n        }\r\n        else{\r\n            secs = seconds;\r\n        }\r\n\r\n        if(minutes >= 60){\r\n            hrs = parseInt(minutes / 60);\r\n            minutes %= 60;\r\n            mins = parseInt(minutes % 60);\r\n        }\r\n        else if(s < 60){\r\n            mins = minutes;\r\n        }\r\n\r\n        if(s < 60 && m < 60){\r\n            hrs = hours;\r\n        }\r\n\r\n        //console.log(hrs, mins, secs);\r\n\r\n        secs = ((secs < 10) ? '0' : '') + secs;\r\n        mins = ((mins < 10) ? '0' : '') + mins;\r\n        hrs = ((hrs < 10) ? '0' : '') + hrs;\r\n\r\n        return `${hrs}:${mins}:${secs}`;\r\n    }\r\n}"]}