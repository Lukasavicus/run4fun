{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","_fetch","args","window","sessionStorage","token","options","undefined","push","headers","result","originalFetch","apply","then","res","ok","status","login","location","href","fetch","Error","statusText","url","_handleErrors","json","response_json","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","readyState","JSON","parse","responseText","console","log","send"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;AAET,uCAAa;AAAA;;AACT,yBAAKC,MAAL,GAAe,yBAAiB;AAChC,+BAAO,YAAa;AAAA,8DAATC,IAAS;AAATA,oCAAS;AAAA;;AAChB;AACA,gCAAGC,OAAOC,cAAP,CAAsBC,KAAzB,EAA+B;AAC3B,oCAAIC,UAAUJ,KAAK,CAAL,CAAd;AACA,oCAAGI,YAAYC,SAAf,EACIL,KAAKM,IAAL,CAAU,EAAC,WAAY,EAAC,kBAAmBL,OAAOC,cAAP,CAAsBC,KAA1C,EAAb,EAAV,EADJ,KAGIC,QAAQG,OAAR,CAAgB,gBAAhB,IAAoCN,OAAOC,cAAP,CAAsBC,KAA1D;AACP;AACD;AACA;AACA,gCAAMK,SAASC,cAAcC,KAAd,CAAoBT,MAApB,EAA4BD,IAA5B,EAAkCW,IAAlC,CAAuC,UAACC,GAAD,EAAS;AAC3D,oCAAG,CAACA,IAAIC,EAAL,IAAWD,IAAIE,MAAJ,IAAc,GAA5B,EAAgC;AAC5B,2CAAOb,OAAOC,cAAP,CAAsBC,KAA7B;AACA,2CAAOF,OAAOC,cAAP,CAAsBa,KAA7B;AACAd,2CAAOe,QAAP,CAAgBC,IAAhB,GAAuB,WAAvB;AACH;AACD,uCAAOL,GAAP;AACH,6BAPc,CAAf;AAQA,mCAAOJ,MAAP,CAnBgB,CAmBF;AACjB,yBApBD;AAqBD,qBAtBe,CAsBbU,KAtBa,CAAd;;AAwBJ;AACA;AACC;;;;kDAEaN,G,EAAK;AACf,4BAAG,CAACA,IAAIC,EAAR,EAAY,MAAM,IAAIM,KAAJ,CAAUP,IAAIQ,UAAd,CAAN;AACZ,+BAAOR,GAAP;AACH;;;wCAEGS,G,EAAK;AAAA;;AACL,+BAAO,KAAKtB,MAAL,CAAYsB,GAAZ,EACFV,IADE,CACG;AAAA,mCAAO,MAAKW,aAAL,CAAmBV,GAAnB,CAAP;AAAA,yBADH,EAEFD,IAFE,CAEG;AAAA,mCAAOC,IAAIW,IAAJ,EAAP;AAAA,yBAFH,CAAP;AAIH;;;yCAEIF,G,EAAKjB,O,EAA8B;AAAA;;AAAA,4BAArBoB,aAAqB,uEAAP,KAAO;;AACpC,+BAAO,KAAKzB,MAAL,CAAYsB,GAAZ,EAAiBjB,OAAjB,EACNO,IADM,CACD;AAAA,mCAAO,OAAKW,aAAL,CAAmBV,GAAnB,CAAP;AAAA,yBADC,EAEND,IAFM,CAED;AAAA,mCAAOa,gBAAgBZ,IAAIW,IAAJ,EAAhB,GAA6BX,GAApC;AAAA,yBAFC,CAAP;AAGH;;;yCAGIS,G,EAAK;AACN,+BAAO,IAAII,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,gCAAIE,IAAJ,CAAS,KAAT,EAAgBT,GAAhB;AACAO,gCAAIG,kBAAJ,GAAyB,YAAM;AAC3B,oCAAGH,IAAII,UAAJ,IAAkB,CAArB,EAAwB;AACpB,wCAAGJ,IAAId,MAAJ,IAAc,GAAjB,EAAsB;AAClBY,gDAAQO,KAAKC,KAAL,CAAWN,IAAIO,YAAf,CAAR;AACH,qCAFD,MAGK;AACDC,gDAAQC,GAAR,CAAYT,IAAIO,YAAhB;AACAR,+CAAOC,IAAIO,YAAX;AACH;AACJ;AACJ,6BAVD;AAWAP,gCAAIU,IAAJ;AACH,yBAfM,CAAP;AAgBH","file":"HttpService.js","sourcesContent":["export class HttpService {\r\n\r\n    constructor(){\r\n        this._fetch = (originalFetch => {\r\n        return (...args) => {\r\n            //console.log(\"arg before \",args);\r\n            if(window.sessionStorage.token){\r\n                let options = args[1];\r\n                if(options === undefined)\r\n                    args.push({'headers' : {'x-access-token' : window.sessionStorage.token}})\r\n                else\r\n                    options.headers['x-access-token'] = window.sessionStorage.token;\r\n            }\r\n            //console.log(\"arg after \",args);\r\n            //const result = originalFetch.apply(window, args);\r\n            const result = originalFetch.apply(window, args).then((res) => {\r\n                if(!res.ok && res.status == 401){\r\n                    delete window.sessionStorage.token;\r\n                    delete window.sessionStorage.login;\r\n                    window.location.href = \"home.html\";\r\n                }\r\n                return res;\r\n            });\r\n            return result;//.then(console.log('Request was sent'));\r\n        };\r\n      })(fetch);\r\n  \r\n    // if(window.sessionStorage.token)\r\n    //     delete window.sessionStorage.token;\r\n    }\r\n\r\n    _handleErrors(res) {\r\n        if(!res.ok) throw new Error(res.statusText);\r\n        return res;\r\n    }\r\n\r\n    get(url) {\r\n        return this._fetch(url)\r\n            .then(res => this._handleErrors(res))\r\n            .then(res => res.json());\r\n        \r\n    }\r\n    \r\n    post(url, options, response_json=false) {\r\n        return this._fetch(url, options)\r\n        .then(res => this._handleErrors(res))\r\n        .then(res => response_json ? res.json() : res)\r\n    }\r\n\r\n    // This is deprecated\r\n    _get(url) {\r\n        return new Promise((resolve, reject) => {\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open('GET', url);\r\n            xhr.onreadystatechange = () => {\r\n                if(xhr.readyState == 4) {\r\n                    if(xhr.status == 200) {\r\n                        resolve(JSON.parse(xhr.responseText));\r\n                    }\r\n                    else {\r\n                        console.log(xhr.responseText);\r\n                        reject(xhr.responseText);\r\n                    }\r\n                }\r\n            }\r\n            xhr.send();\r\n        });\r\n    }\r\n}"]}