{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","_fetch","args","window","sessionStorage","token","options","undefined","push","headers","result","originalFetch","apply","fetch","res","ok","Error","statusText","url","then","_handleErrors","json","response_json","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","JSON","parse","responseText","console","log","send"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;AAET,uCAAa;AAAA;;AACT,yBAAKC,MAAL,GAAe,yBAAiB;AAChC,+BAAO,YAAa;AAAA,8DAATC,IAAS;AAATA,oCAAS;AAAA;;AAChB;AACA,gCAAGC,OAAOC,cAAP,CAAsBC,KAAzB,EAA+B;AAC3B,oCAAIC,UAAUJ,KAAK,CAAL,CAAd;AACA,oCAAGI,YAAYC,SAAf,EACIL,KAAKM,IAAL,CAAU,EAAC,WAAY,EAAC,kBAAmBL,OAAOC,cAAP,CAAsBC,KAA1C,EAAb,EAAV,EADJ,KAGIC,QAAQG,OAAR,CAAgB,gBAAhB,IAAoCN,OAAOC,cAAP,CAAsBC,KAA1D;AACP;AACD;AACA,gCAAMK,SAASC,cAAcC,KAAd,CAAoBT,MAApB,EAA4BD,IAA5B,CAAf;AACA,mCAAOQ,MAAP,CAXgB,CAWF;AACjB,yBAZD;AAaD,qBAde,CAcbG,KAda,CAAd;;AAgBJ;AACA;AACC;;;;kDAEaC,G,EAAK;AACf,4BAAG,CAACA,IAAIC,EAAR,EAAY,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACZ,+BAAOH,GAAP;AACH;;;wCAEGI,G,EAAK;AAAA;;AACL,+BAAO,KAAKjB,MAAL,CAAYiB,GAAZ,EACFC,IADE,CACG;AAAA,mCAAO,MAAKC,aAAL,CAAmBN,GAAnB,CAAP;AAAA,yBADH,EAEFK,IAFE,CAEG;AAAA,mCAAOL,IAAIO,IAAJ,EAAP;AAAA,yBAFH,CAAP;AAIH;;;yCAEIH,G,EAAKZ,O,EAA8B;AAAA;;AAAA,4BAArBgB,aAAqB,uEAAP,KAAO;;AACpC,+BAAO,KAAKrB,MAAL,CAAYiB,GAAZ,EAAiBZ,OAAjB,EACNa,IADM,CACD;AAAA,mCAAO,OAAKC,aAAL,CAAmBN,GAAnB,CAAP;AAAA,yBADC,EAENK,IAFM,CAED;AAAA,mCAAOG,gBAAgBR,IAAIO,IAAJ,EAAhB,GAA6BP,GAApC;AAAA,yBAFC,CAAP;AAGH;;;yCAGII,G,EAAK;AACN,+BAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,MAAM,IAAIC,cAAJ,EAAV;AACAD,gCAAIE,IAAJ,CAAS,KAAT,EAAgBV,GAAhB;AACAQ,gCAAIG,kBAAJ,GAAyB,YAAM;AAC3B,oCAAGH,IAAII,UAAJ,IAAkB,CAArB,EAAwB;AACpB,wCAAGJ,IAAIK,MAAJ,IAAc,GAAjB,EAAsB;AAClBP,gDAAQQ,KAAKC,KAAL,CAAWP,IAAIQ,YAAf,CAAR;AACH,qCAFD,MAGK;AACDC,gDAAQC,GAAR,CAAYV,IAAIQ,YAAhB;AACAT,+CAAOC,IAAIQ,YAAX;AACH;AACJ;AACJ,6BAVD;AAWAR,gCAAIW,IAAJ;AACH,yBAfM,CAAP;AAgBH","file":"HttpService.js","sourcesContent":["export class HttpService {\r\n\r\n    constructor(){\r\n        this._fetch = (originalFetch => {\r\n        return (...args) => {\r\n            //console.log(\"arg before \",args);\r\n            if(window.sessionStorage.token){\r\n                let options = args[1];\r\n                if(options === undefined)\r\n                    args.push({'headers' : {'x-access-token' : window.sessionStorage.token}})\r\n                else\r\n                    options.headers['x-access-token'] = window.sessionStorage.token;\r\n            }\r\n            //console.log(\"arg after \",args);\r\n            const result = originalFetch.apply(window, args);\r\n            return result;//.then(console.log('Request was sent'));\r\n        };\r\n      })(fetch);\r\n  \r\n    // if(window.sessionStorage.token)\r\n    //     delete window.sessionStorage.token;\r\n    }\r\n\r\n    _handleErrors(res) {\r\n        if(!res.ok) throw new Error(res.statusText);\r\n        return res;\r\n    }\r\n\r\n    get(url) {\r\n        return this._fetch(url)\r\n            .then(res => this._handleErrors(res))\r\n            .then(res => res.json());\r\n        \r\n    }\r\n    \r\n    post(url, options, response_json=false) {\r\n        return this._fetch(url, options)\r\n        .then(res => this._handleErrors(res))\r\n        .then(res => response_json ? res.json() : res)\r\n    }\r\n\r\n    // This is deprecated\r\n    _get(url) {\r\n        return new Promise((resolve, reject) => {\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open('GET', url);\r\n            xhr.onreadystatechange = () => {\r\n                if(xhr.readyState == 4) {\r\n                    if(xhr.status == 200) {\r\n                        resolve(JSON.parse(xhr.responseText));\r\n                    }\r\n                    else {\r\n                        console.log(xhr.responseText);\r\n                        reject(xhr.responseText);\r\n                    }\r\n                }\r\n            }\r\n            xhr.send();\r\n        });\r\n    }\r\n}"]}