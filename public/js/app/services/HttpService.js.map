{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","_fetch","args","console","log","window","sessionStorage","token","undefined","headers","push","result","originalFetch","apply","then","res","ok","status","fetch","Error","statusText","url","_handleErrors","res_json","json","options","response_json","method","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","readyState","JSON","parse","responseText","send"],"mappings":"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","file":"HttpService.js","sourcesContent":["export class HttpService {\r\n\r\n    constructor(){\r\n        this._fetch = (originalFetch => {\r\n        return (...args) => {\r\n            console.log(\"arg before \",args);\r\n            if(window.sessionStorage.token){\r\n                if(args[1] === undefined || args[1].headers === undefined ){\r\n                    args.push({'headers' : {'x-access-token' : window.sessionStorage.token}});\r\n                }\r\n                else{\r\n                    console.log('I do have a token ! Let me pass');\r\n                    args[1].headers['x-access-token'] = window.sessionStorage.token;\r\n                }\r\n            }\r\n            console.log(\"arg after \",args);\r\n            //const result = originalFetch.apply(window, args);\r\n            const result = originalFetch.apply(window, args).then((res) => {\r\n                if(!res.ok && res.status == 401){\r\n                    // IF 401 REDIRECT\r\n                    // delete window.sessionStorage.token;\r\n                    // delete window.sessionStorage.login;\r\n                    // window.location.href = \"home.html\";\r\n                }\r\n                return res;\r\n            });\r\n            return result;//.then(console.log('Request was sent'));\r\n        };\r\n      })(fetch);\r\n  \r\n    // if(window.sessionStorage.token)\r\n    //     delete window.sessionStorage.token;\r\n    }\r\n\r\n    _handleErrors(res) {\r\n        console.log('HttpService', res);\r\n        if(!res.ok) throw new Error(res.statusText);\r\n        return res;\r\n    }\r\n\r\n    get(url) {\r\n        return this._fetch(url)\r\n            .then(res => this._handleErrors(res))\r\n            // .then(res => res.json());\r\n            .then(res => {\r\n                // console.log('GET Res', res);\r\n                let res_json = res.json();\r\n                // console.log('GET ResJson', res_json);\r\n                return res_json;\r\n            });\r\n    }\r\n    \r\n    post(url, options, response_json=false) {\r\n        console.log('POST', url, options, response_json);\r\n        return this._fetch(url, options)\r\n        .then(res => this._handleErrors(res))\r\n        .then(res => response_json ? res.json() : res)\r\n    }\r\n\r\n    patch(url) {\r\n        return this._fetch(url, {\r\n            method: 'PATCH'\r\n        })\r\n        .then(res => this._handleErrors(res))\r\n        .then(res => res.json());\r\n    }\r\n\r\n    delete(url) {\r\n        return this._fetch(url, {\r\n            method: 'DELETE',\r\n            headers : {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => this._handleErrors(res))\r\n        .then(res => res.json());\r\n    }\r\n\r\n    // This is deprecated\r\n    _get(url) {\r\n        return new Promise((resolve, reject) => {\r\n            let xhr = new XMLHttpRequest();\r\n            xhr.open('GET', url);\r\n            xhr.onreadystatechange = () => {\r\n                if(xhr.readyState == 4) {\r\n                    if(xhr.status == 200) {\r\n                        resolve(JSON.parse(xhr.responseText));\r\n                    }\r\n                    else {\r\n                        console.log(xhr.responseText);\r\n                        reject(xhr.responseText);\r\n                    }\r\n                }\r\n            }\r\n            xhr.send();\r\n        });\r\n    }\r\n}"]}